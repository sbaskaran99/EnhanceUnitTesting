{
    "test_run_date": "2025-03-26T23:00:45.473723",
    "results": [
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_empty_item",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 68, in test_empty_item\n    Order(\"\", 1)  # Item should not be empty\nAssertionError: ValueError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_invalid_id_negative",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 78, in test_invalid_id_negative\n    Order(\"Peach\", 2)  # No direct way to set ID, but we can check indirectly\nAssertionError: ValueError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_invalid_item_type",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 42, in test_invalid_item_type\n    Order(123, 5)  # Item should be a string\nAssertionError: TypeError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_invalid_quantity_type",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 47, in test_invalid_quantity_type\n    Order(\"Orange\", \"two\")  # Quantity should be an integer\nAssertionError: TypeError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_multiple_orders",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_negative_quantity",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 57, in test_negative_quantity\n    Order(\"Peach\", -1)  # Quantity should be non-negative\nAssertionError: ValueError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_null_item",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\model\\test_order_0.py\", line 73, in test_null_item\n    Order(None, 1)  # Item should not be None\nAssertionError: TypeError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_string_representation",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_valid_order_creation",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.model.test_order_0.TestOrder.test_zero_quantity",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_all_after_saving_multiple_orders",
            "status": "ERROR",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 68, in test_find_all_after_saving_multiple_orders\n    order1 = Order(\"Grapes\", 4, id=4)\nTypeError: __init__() got an unexpected keyword argument 'id'\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_all_empty",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_by_id_invalid",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_by_id_negative_id",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 54, in test_find_by_id_negative_id\n    self.repository.find_by_id(-1)\nAssertionError: ValueError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_by_id_valid",
            "status": "ERROR",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 33, in test_find_by_id_valid\n    order = Order(\"Banana\", 2, id=2)\nTypeError: __init__() got an unexpected keyword argument 'id'\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_find_by_id_zero_id",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 59, in test_find_by_id_zero_id\n    self.repository.find_by_id(0)\nAssertionError: ValueError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_save_invalid_order",
            "status": "ERROR",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 49, in test_save_invalid_order\n    self.repository.save(Order(\"Orange\", 3, id=-1))\nTypeError: __init__() got an unexpected keyword argument 'id'\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_save_none_order",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 64, in test_save_none_order\n    self.repository.save(None)\nAssertionError: TypeError not raised\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_in_memory_order_repository_0.TestInMemoryOrderRepository.test_save_valid_order",
            "status": "ERROR",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_in_memory_order_repository_0.py\", line 27, in test_save_valid_order\n    order = Order(\"Apple\", 1, id=1)\nTypeError: __init__() got an unexpected keyword argument 'id'\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_find_all_empty",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_find_all_with_orders",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_find_by_id_invalid",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_find_by_id_valid",
            "status": "FAIL",
            "reason": "Traceback (most recent call last):\n  File \"D:\\Sai\\EnhanceUnitTesting\\tests\\OrderManagementSystem\\app\\repository\\test_order_repository_0.py\", line 56, in test_find_by_id_valid\n    self.assertEqual(found_order.item, \"Apple\")\nAssertionError: 'Banana' != 'Apple'\n- Banana\n+ Apple\n\n"
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_find_by_id_zero",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_save_invalid_order_type",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.repository.test_order_repository_0.TestOrderRepository.test_save_valid_order",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_create_order_negative_quantity",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_create_order_valid",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_create_order_zero_quantity",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_get_all_orders",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_get_order_by_id_invalid",
            "status": "PASS",
            "reason": null
        },
        {
            "test": "OrderManagementSystem.app.service.test_order_service_0.TestOrderService.test_get_order_by_id_valid",
            "status": "PASS",
            "reason": null
        }
    ]
}